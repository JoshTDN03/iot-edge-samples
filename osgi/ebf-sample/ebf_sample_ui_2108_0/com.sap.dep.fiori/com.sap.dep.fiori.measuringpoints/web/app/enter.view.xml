<mvc:View
    controllerName="dep.fiori.measuringpoints.app.enter"
    class="dep-fiori"
    displayBlock="true"
    height="100%"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:fb="sap.ui.comp.filterbar"
    xmlns:l="sap.ui.layout"
    xmlns:c="sap.ui.core"
    xmlns="sap.m">
    <Page
        id="main"
        enableScrolling="false"
        showHeader="false"
        showSubHeader="false">
        <content>
            <VBox fitContainer="true" renderType="Bare">
            <c:Fragment fragmentName="dep.fiori.lib.frag.filterBar" type="XML" />
            <Toolbar class="sapMTB-Transparent-CTX sapMTB">
                <Title
                    id="tableTitle"
                    text="{ path: '/length', formatter: '.formatters.listTitle' }"
                    level="H2"/>
                <ToolbarSpacer></ToolbarSpacer>
                <Button
                    tooltip="{i18n>List.sort}"
                    icon="sap-icon://drop-down-list"
                    press="onSortPress" />
            </Toolbar>
            <Table showNoData="false">
                <columns>
                    <Column>
                        <Text text="{i18n>Page.measuringPoint}" />
                    </Column>
                    <Column vAlign="Middle" demandPopin="true" minScreenWidth="Tablet">
                        <Text text="{i18nGlobal>General.equipment}" />
                    </Column>
                    <Column demandPopin="true" minScreenWidth="Tablet">
                        <Text text="{i18nGlobal>General.description}" />
                    </Column>
                    <Column demandPopin="true" minScreenWidth="Tablet">
                        <Text text="{i18n>ListItem.lastReading}" />
                    </Column>
                    <Column hAlign="Center">
                        <Text text="{i18n>ListItem.countReading}" />
                    </Column>
                    <Column hAlign="Right">
                        <Text text="{i18nGlobal>General.unit}" />
                    </Column>
                    <Column demandPopin="true" minScreenWidth="Tablet">
                        <Text text="{i18n>ListItem.readingDate}" />
                    </Column>
                    <Column demandPopin="true" minScreenWidth="Tablet">
                        <Text text="{i18nGlobal>General.time}" />
                    </Column>
                </columns>
            </Table>
            <ScrollContainer
                vertical="true"
                height="100%"
                width="100%">

                <Table
                    noDataText="{i18n>List.empty}"
                    id="enter-measuring-point-table"
                    items="{/}"
                    growing="true"
                    growingScrollToLoad="true">
                    <columns>
                        <Column vAlign="Middle">
                            <Text text="{i18n>Page.measuringPoint}" />
                        </Column>
                        <Column vAlign="Middle" demandPopin="true" minScreenWidth="Tablet">
                            <Text text="{i18nGlobal>General.equipment}" />
                        </Column>
                        <Column vAlign="Middle" demandPopin="true" minScreenWidth="Tablet">
                            <Text text="{i18nGlobal>General.description}" />
                        </Column>
                        <Column vAlign="Middle" demandPopin="true" minScreenWidth="Tablet">
                            <Text text="{i18n>ListItem.lastReading}" />
                        </Column>
                        <Column vAlign="Middle" hAlign="Center">
                            <Text text="{i18n>ListItem.countReading}" />
                        </Column>
                        <Column vAlign="Middle" hAlign="Right">
                            <Text text="{i18nGlobal>General.unit}" />
                        </Column>
                        <Column vAlign="Middle" demandPopin="true" minScreenWidth="Tablet">
                            <Text text="{i18n>ListItem.readingDate}" />
                        </Column>
                        <Column vAlign="Middle" demandPopin="true" minScreenWidth="Tablet">
                            <Text text="{i18nGlobal>General.time}" />
                        </Column>
                    </columns>
                    <items>
                        <ColumnListItem>
                            <cells>
                                <HBox
                                    fitContainer="true"
                                    renderType="Bare"
                                    alignItems="Center">
                                    <Label
                                        text="{POINT}"
                                        design="Bold"
                                        class="measuringPointLabelBlue sapUiTinyMarginEnd" />
                                    <c:Icon
                                        src="sap-icon://message-error"
                                        size="1.25rem"
                                        color="red"
                                        tooltip="{i18nGlobal>General.hasSyncErrors}"
                                        visible="{= !!${EDGE_ERRORS} }"
                                        press="handleResponsivePopoverPress" />
                                </HBox>
                                <Text textAlign="Initial" text="{EQUNR}"/>
                                <Text textAlign="Initial" text="{PTTXT}"/>
                                <Label text="{CNTRR_C}"/>
                                <Input
                                    id="readingInput"
                                    type="Number"
                                    value="{RECDV_CHAR}"
                                    change="onReadingChange"
                                    valueState="{path: 'POINT', formatter: '.formatters.readingError'}"/>
                                <Label text="{MRNGU}" design="Bold"/>
                                <DatePicker
                                    id="datePicker"
                                    value="{IDATE}"
                                    valueFormat="yyyyMMdd"
                                    displayFormat="medium"
                                    enabled="{path: 'RECDV_CHAR', formatter:'.formatters.datePickerEnabled'}"
                                    change="onReadingChange"
                                    valueState="{path: 'POINT', formatter: '.formatters.dateError'}"/>
                                <TimePicker
                                    width="100%"
                                    id="timePicker"
                                    value="{ITIME}"
                                    valueFormat="HHmmss"
                                    displayFormat="HH:mm"
                                    enabled="{path: 'RECDV_CHAR', formatter:'.formatters.datePickerEnabled'}"
                                    change="onReadingChange"
                                    valueState="{path: 'POINT', formatter: '.formatters.dateError'}"/>
                            </cells>
                        </ColumnListItem>
                    </items>
                </Table>
            </ScrollContainer>
            </VBox>
        </content>

        <footer>
            <Bar id="otbFooter">
                <contentLeft>
                    <Button
                        id="messages-button"
                        icon="sap-icon://message-popup"
                        text="{/length}"
                        type="Emphasized"
                        press="handleMessagePopoverPress"/>
                </contentLeft>
                <contentRight>
                    <Button
                        id="save-button"
                        type="Emphasized"
                        text="{i18nGlobal>General.save}"
                        press="measuringPointsSave"
                        enabled="{path: '', formatter:'.formatters.saveButtonEnabled'}">
                    </Button>
                </contentRight>
            </Bar>
        </footer>
    </Page>
</mvc:View>